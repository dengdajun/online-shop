<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.davinci" use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Component" />
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Service" />
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Repository" />
    </context:component-scan>
    <!--加载properties文件-->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="fileEncoding" value="UTF-8" />
        <property name="locations">
            <list>
                <value>classpath:props/jdbc.properties</value>
                <value>classpath:props/dataPool.properties</value>
            </list>
        </property>
    </bean>
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="close">
        <!--mysql base config-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--data pool config-->
        <!--连接只读数据库时配置为true，保证安全-->
        <property name="readOnly" value="false"/>
        <property name="connectionTimeout" value="${jdbc.pool.connectionTimeout}"/>
        <!--<property name="idleTimeout" value="${jdbc.pool.idleTimeout}"/>-->
        <property name="maxLifetime" value="${jdbc.pool.maxLifetime}"/>
        <property name="maximumPoolSize" value="${jdbc.pool.maximumPoolSize}"/>
    </bean>
    <!-- 配置mybatis Session工厂 -->
    <bean id="sqlSessionFactoryMysql" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis.cfg.xml" />
    </bean>
    <!-- 自动扫描所有的Mapper接口与文件 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="/**/*.mapper" />
        <property name="annotationClass" value="com.davinci.core.mybatis.MyBatisInterface" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryMysql" />
    </bean>
    <!--事物配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <aop:config>
        <aop:pointcut expression="execution(* com.davinci..*(..))" id="serviceMethods" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--只读-->
            <tx:method name="get*" isolation="DEFAULT"
                       propagation="SUPPORTS" read-only="true" />
            <tx:method name="query*" isolation="DEFAULT"
                       propagation="SUPPORTS" read-only="true" />
            <!--其他方法 -->
            <tx:method name="insert*" isolation="DEFAULT"
                       read-only="false" propagation="REQUIRED"
                       rollback-for="Exception" />
            <tx:method name="update*" isolation="DEFAULT"
                       read-only="false" propagation="REQUIRED"
                       rollback-for="Exception" />
            <tx:method name="save*" isolation="DEFAULT"
                       read-only="false" propagation="REQUIRED"
                       rollback-for="Exception" />
            <tx:method name="add*" isolation="DEFAULT" read-only="false"
                       propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="del*" isolation="DEFAULT" read-only="false"
                       propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="remove*" isolation="DEFAULT"
                       read-only="false" propagation="REQUIRED"
                       rollback-for="Exception" />
            <!-- 新开事务 -->
            <tx:method name="invoke*" isolation="DEFAULT"
                       read-only="false" propagation="REQUIRES_NEW"
                       rollback-for="Exception" />
            <tx:method name="make*" isolation="DEFAULT"
                       read-only="false" propagation="REQUIRES_NEW"
                       rollback-for="Exception" />
            <tx:method name="*" isolation="DEFAULT"
                       read-only="false" propagation="REQUIRED"
                       rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>
    <!--多线程使用	@Autowired private TaskExecutor taskExecutor;-->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数  -->
        <property name="corePoolSize" value="10" />
        <!-- 最大线程数 -->
        <property name="maxPoolSize" value="50" />
        <!-- 队列最大长度 >=mainExecutor.maxSize -->
        <property name="queueCapacity" value="100" />
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="10" />
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
    </bean>
    <import resource="shiro.xml" />
</beans>
